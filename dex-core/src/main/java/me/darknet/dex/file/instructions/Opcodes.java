package me.darknet.dex.file.instructions;

public interface Opcodes {

    int NOP = 0x00;
    int MOVE = 0x01;
    int MOVE_FROM16 = 0x02;
    int MOVE_16 = 0x03;
    int MOVE_WIDE = 0x04;
    int MOVE_WIDE_FROM16 = 0x05;
    int MOVE_WIDE_16 = 0x06;
    int MOVE_OBJECT = 0x07;
    int MOVE_OBJECT_FROM16 = 0x08;
    int MOVE_OBJECT_16 = 0x09;
    int MOVE_RESULT = 0x0a;
    int MOVE_RESULT_WIDE = 0x0b;
    int MOVE_RESULT_OBJECT = 0x0c;
    int MOVE_EXCEPTION = 0x0d;
    int RETURN_VOID = 0x0e;
    int RETURN = 0x0f;
    int RETURN_WIDE = 0x10;
    int RETURN_OBJECT = 0x11;
    int CONST_4 = 0x12;
    int CONST_16 = 0x13;
    int CONST = 0x14;
    int CONST_HIGH16 = 0x15;
    int CONST_WIDE_16 = 0x16;
    int CONST_WIDE_32 = 0x17;
    int CONST_WIDE = 0x18;
    int CONST_WIDE_HIGH16 = 0x19;
    int CONST_STRING = 0x1a;
    int CONST_STRING_JUMBO = 0x1b;
    int CONST_CLASS = 0x1c;
    int MONITOR_ENTER = 0x1d;
    int MONITOR_EXIT = 0x1e;
    int CHECK_CAST = 0x1f;
    int INSTANCE_OF = 0x20;
    int ARRAY_LENGTH = 0x21;
    int NEW_INSTANCE = 0x22;
    int NEW_ARRAY = 0x23;
    int FILLED_NEW_ARRAY = 0x24;
    int FILLED_NEW_ARRAY_RANGE = 0x25;
    int FILL_ARRAY_DATA = 0x26;
    int THROW = 0x27;
    int GOTO = 0x28;
    int GOTO_16 = 0x29;
    int GOTO_32 = 0x2a;
    int PACKED_SWITCH = 0x2b;
    int SPARSE_SWITCH = 0x2c;
    int CMPL_FLOAT = 0x2d;
    int CMPG_FLOAT = 0x2e;
    int CMPL_DOUBLE = 0x2f;
    int CMPG_DOUBLE = 0x30;
    int CMP_LONG = 0x31;
    int IF_EQ = 0x32;
    int IF_NE = 0x33;
    int IF_LT = 0x34;
    int IF_GE = 0x35;
    int IF_GT = 0x36;
    int IF_LE = 0x37;
    int IF_EQZ = 0x38;
    int IF_NEZ = 0x39;
    int IF_LTZ = 0x3a;
    int IF_GEZ = 0x3b;
    int IF_GTZ = 0x3c;
    int IF_LEZ = 0x3d;
    int AGET = 0x44;
    int AGET_WIDE = 0x45;
    int AGET_OBJECT = 0x46;
    int AGET_BOOLEAN = 0x47;
    int AGET_BYTE = 0x48;
    int AGET_CHAR = 0x49;
    int AGET_SHORT = 0x4a;
    int APUT = 0x4b;
    int APUT_WIDE = 0x4c;
    int APUT_OBJECT = 0x4d;
    int APUT_BOOLEAN = 0x4e;
    int APUT_BYTE = 0x4f;
    int APUT_CHAR = 0x50;
    int APUT_SHORT = 0x51;
    int IGET = 0x52;
    int IGET_WIDE = 0x53;
    int IGET_OBJECT = 0x54;
    int IGET_BOOLEAN = 0x55;
    int IGET_BYTE = 0x56;
    int IGET_CHAR = 0x57;
    int IGET_SHORT = 0x58;
    int IPUT = 0x59;
    int IPUT_WIDE = 0x5a;
    int IPUT_OBJECT = 0x5b;
    int IPUT_BOOLEAN = 0x5c;
    int IPUT_BYTE = 0x5d;
    int IPUT_CHAR = 0x5e;
    int IPUT_SHORT = 0x5f;
    int SGET = 0x60;
    int SGET_WIDE = 0x61;
    int SGET_OBJECT = 0x62;
    int SGET_BOOLEAN = 0x63;
    int SGET_BYTE = 0x64;
    int SGET_CHAR = 0x65;
    int SGET_SHORT = 0x66;
    int SPUT = 0x67;
    int SPUT_WIDE = 0x68;
    int SPUT_OBJECT = 0x69;
    int SPUT_BOOLEAN = 0x6a;
    int SPUT_BYTE = 0x6b;
    int SPUT_CHAR = 0x6c;
    int SPUT_SHORT = 0x6d;
    int INVOKE_VIRTUAL = 0x6e;
    int INVOKE_SUPER = 0x6f;
    int INVOKE_DIRECT = 0x70;
    int INVOKE_STATIC = 0x71;
    int INVOKE_INTERFACE = 0x72;
    int INVOKE_VIRTUAL_RANGE = 0x74;
    int INVOKE_SUPER_RANGE = 0x75;
    int INVOKE_DIRECT_RANGE = 0x76;
    int INVOKE_STATIC_RANGE = 0x77;
    int INVOKE_INTERFACE_RANGE = 0x78;
    int NEG_INT = 0x7b;
    int NOT_INT = 0x7c;
    int NEG_LONG = 0x7d;
    int NOT_LONG = 0x7e;
    int NEG_FLOAT = 0x7f;
    int NEG_DOUBLE = 0x80;
    int INT_TO_LONG = 0x81;
    int INT_TO_FLOAT = 0x82;
    int INT_TO_DOUBLE = 0x83;
    int LONG_TO_INT = 0x84;
    int LONG_TO_FLOAT = 0x85;
    int LONG_TO_DOUBLE = 0x86;
    int FLOAT_TO_INT = 0x87;
    int FLOAT_TO_LONG = 0x88;
    int FLOAT_TO_DOUBLE = 0x89;
    int DOUBLE_TO_INT = 0x8a;
    int DOUBLE_TO_LONG = 0x8b;
    int DOUBLE_TO_FLOAT = 0x8c;
    int INT_TO_BYTE = 0x8d;
    int INT_TO_CHAR = 0x8e;
    int INT_TO_SHORT = 0x8f;
    int ADD_INT = 0x90;
    int SUB_INT = 0x91;
    int MUL_INT = 0x92;
    int DIV_INT = 0x93;
    int REM_INT = 0x94;
    int AND_INT = 0x95;
    int OR_INT = 0x96;
    int XOR_INT = 0x97;
    int SHL_INT = 0x98;
    int SHR_INT = 0x99;
    int USHR_INT = 0x9a;
    int ADD_LONG = 0x9b;
    int SUB_LONG = 0x9c;
    int MUL_LONG = 0x9d;
    int DIV_LONG = 0x9e;
    int REM_LONG = 0x9f;
    int AND_LONG = 0xa0;
    int OR_LONG = 0xa1;
    int XOR_LONG = 0xa2;
    int SHL_LONG = 0xa3;
    int SHR_LONG = 0xa4;
    int USHR_LONG = 0xa5;
    int ADD_FLOAT = 0xa6;
    int SUB_FLOAT = 0xa7;
    int MUL_FLOAT = 0xa8;
    int DIV_FLOAT = 0xa9;
    int REM_FLOAT = 0xaa;
    int ADD_DOUBLE = 0xab;
    int SUB_DOUBLE = 0xac;
    int MUL_DOUBLE = 0xad;
    int DIV_DOUBLE = 0xae;
    int REM_DOUBLE = 0xaf;
    int ADD_INT_2ADDR = 0xb0;
    int SUB_INT_2ADDR = 0xb1;
    int MUL_INT_2ADDR = 0xb2;
    int DIV_INT_2ADDR = 0xb3;
    int REM_INT_2ADDR = 0xb4;
    int AND_INT_2ADDR = 0xb5;
    int OR_INT_2ADDR = 0xb6;
    int XOR_INT_2ADDR = 0xb7;
    int SHL_INT_2ADDR = 0xb8;
    int SHR_INT_2ADDR = 0xb9;
    int USHR_INT_2ADDR = 0xba;
    int ADD_LONG_2ADDR = 0xbb;
    int SUB_LONG_2ADDR = 0xbc;
    int MUL_LONG_2ADDR = 0xbd;
    int DIV_LONG_2ADDR = 0xbe;
    int REM_LONG_2ADDR = 0xbf;
    int AND_LONG_2ADDR = 0xc0;
    int OR_LONG_2ADDR = 0xc1;
    int XOR_LONG_2ADDR = 0xc2;
    int SHL_LONG_2ADDR = 0xc3;
    int SHR_LONG_2ADDR = 0xc4;
    int USHR_LONG_2ADDR = 0xc5;
    int ADD_FLOAT_2ADDR = 0xc6;
    int SUB_FLOAT_2ADDR = 0xc7;
    int MUL_FLOAT_2ADDR = 0xc8;
    int DIV_FLOAT_2ADDR = 0xc9;
    int REM_FLOAT_2ADDR = 0xca;
    int ADD_DOUBLE_2ADDR = 0xcb;
    int SUB_DOUBLE_2ADDR = 0xcc;
    int MUL_DOUBLE_2ADDR = 0xcd;
    int DIV_DOUBLE_2ADDR = 0xce;
    int REM_DOUBLE_2ADDR = 0xcf;
    int ADD_INT_LIT16 = 0xd0;
    int RSUB_INT = 0xd1;
    int MUL_INT_LIT16 = 0xd2;
    int DIV_INT_LIT16 = 0xd3;
    int REM_INT_LIT16 = 0xd4;
    int AND_INT_LIT16 = 0xd5;
    int OR_INT_LIT16 = 0xd6;
    int XOR_INT_LIT16 = 0xd7;
    int ADD_INT_LIT8 = 0xd8;
    int RSUB_INT_LIT8 = 0xd9;
    int MUL_INT_LIT8 = 0xda;
    int DIV_INT_LIT8 = 0xdb;
    int REM_INT_LIT8 = 0xdc;
    int AND_INT_LIT8 = 0xdd;
    int OR_INT_LIT8 = 0xde;
    int XOR_INT_LIT8 = 0xdf;
    int SHL_INT_LIT8 = 0xe0;
    int SHR_INT_LIT8 = 0xe1;
    int USHR_INT_LIT8 = 0xe2;
    int IGET_VOLATILE = 0xe3;
    int IPUT_VOLATILE = 0xe4;
    int SGET_VOLATILE = 0xe5;
    int SPUT_VOLATILE = 0xe6;
    int IGET_OBJECT_VOLATILE = 0xe7;
    int IGET_WIDE_VOLATILE = 0xe8;
    int IPUT_WIDE_VOLATILE = 0xe9;
    int SGET_WIDE_VOLATILE = 0xea;
    int SPUT_WIDE_VOLATILE = 0xeb;
    int BREAKPOINT = 0xec;
    int THROW_VERIFICATION_ERROR = 0xed;
    int EXECUTE_INLINE = 0xee;
    int EXECUTE_INLINE_RANGE = 0xef;
    int INVOKE_OBJECT_INIT_RANGE = 0xf0;
    int RETURN_VOID_BARRIER = 0xf1;
    int IGET_QUICK = 0xf2;
    int IGET_WIDE_QUICK = 0xf3;
    int IGET_OBJECT_QUICK = 0xf4;
    int IPUT_QUICK = 0xf5;
    int IPUT_WIDE_QUICK = 0xf6;
    int IPUT_OBJECT_QUICK = 0xf7;
    int INVOKE_VIRTUAL_QUICK = 0xf8;
    int INVOKE_VIRTUAL_QUICK_RANGE = 0xf9;
    int INVOKE_POLYMORPHIC = 0xfa;
    int INVOKE_POLYMORPHIC_RANGE = 0xfb;
    int INVOKE_CUSTOM = 0xfc;
    int INVOKE_CUSTOM_RANGE = 0xfd;
    int CONST_METHOD_HANDLE = 0xfe;
    int CONST_METHOD_TYPE = 0xff;

}
